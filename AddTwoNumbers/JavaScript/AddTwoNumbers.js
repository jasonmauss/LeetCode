"use strict";
// Solution for https://leetcode.com/problems/add-two-numbers/
exports.__esModule = true;
exports.ListNode = void 0;
var ListNode = /** @class */ (function () {
    function ListNode(val, next) {
        this.val = (val === undefined ? 0 : val);
        this.next = (next === undefined ? null : next);
    }
    return ListNode;
}());
exports.ListNode = ListNode;
function addTwoNumbers(l1, l2) {
    var additionResult = getNumberFromListNode(l1) + getNumberFromListNode(l2);
    var resultArray = String(additionResult).split('');
    // using .reduce() https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce
    // for each item in the resultArray, create a ListNode and set the 'val' property
    // to the current array value then set the next value to the previous/accumulated linked ListNodes that
    // have been generated by previous calls to reduce.
    return resultArray.reduce(function (next, value) {
        return new ListNode(Number(value), next);
    }, undefined);
}
function getNumberFromListNode(listNode) {
    var numericString = String(listNode.val);
    var currentList = listNode;
    while (currentList.next) {
        numericString += String(currentList.next.val);
        currentList = currentList.next;
    }
    // let dummy = numericString.split(''); // turns '243' into ['2','4','3']
    // let reverseDummy = dummy.reverse(); // turns ['2','4','3'] into ['3','4','2'] - don't have to set it to another variable actually, it affects original array.
    // let joinedReverseDummy = reverseDummy.join(''); // turns ['3','4','2'] into '342'
    // cast value to a BigInt - the three lines above have been commented out and done inline here.
    // Leaving the commented lines here for easy/quick reference as to the details of what the single line is doing.
    return BigInt(numericString.split('').reverse().join(''));
}
// Test Case
var l1 = new ListNode(3, null);
var l2 = new ListNode(4, l1);
var l3 = new ListNode(2, l2);
var l4 = new ListNode(4, null);
var l5 = new ListNode(6, l4);
var l6 = new ListNode(5, l5);
var result = addTwoNumbers(l3, l6);
