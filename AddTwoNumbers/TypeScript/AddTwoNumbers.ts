// Solution for https://leetcode.com/problems/add-two-numbers/

export class ListNode {
     val: number
     next: ListNode | null
     constructor(val?: number, next?: ListNode | null) {
         this.val = (val===undefined ? 0 : val)
         this.next = (next===undefined ? null : next)
     }
 }
 
 function addTwoNumbers(l1: ListNode | null, l2: ListNode | null): ListNode | null {
    
    const additionResult: bigint = getNumberFromListNode(l1) + getNumberFromListNode(l2);
    let resultArray: string[] = String(additionResult).split('');

    // using .reduce() https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce
    // for each item in the resultArray, create a ListNode and set the 'val' property
    // to the current array value then set the next value to the previous/accumulated linked ListNodes that
    // have been generated by previous calls to reduce.
    return resultArray.reduce<ListNode | null>((next, value) => {
        return new ListNode(Number(value), next)
    }, undefined)

}

function getNumberFromListNode(listNode: ListNode): bigint {

    let numericString = String(listNode.val);
    let currentList = listNode;

    while(currentList.next) {
        numericString += String(currentList.next.val);
        currentList = currentList.next;
    }

    // let dummy = numericString.split(''); // turns '243' into ['2','4','3']
    // let reverseDummy = dummy.reverse(); // turns ['2','4','3'] into ['3','4','2'] - don't have to set it to another variable actually, it affects original array.
    // let joinedReverseDummy = reverseDummy.join(''); // turns ['3','4','2'] into '342'

    // cast value to a BigInt - the three lines above have been commented out and done inline here.
    // Leaving the commented lines here for easy/quick reference as to the details of what the single line is doing.
    return BigInt(numericString.split('').reverse().join(''));
}

let l1: ListNode = new ListNode(3, null);
let l2: ListNode = new ListNode(4, l1);
let l3: ListNode = new ListNode(2, l2);

let l4: ListNode = new ListNode(4, null);
let l5: ListNode = new ListNode(6, l4);
let l6: ListNode = new ListNode(5, l5);

let result: ListNode = addTwoNumbers(l3, l6);